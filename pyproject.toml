[tool.poetry]
name = "fift-analytics"
version = "0.1.0"
description = "\"Fixed Income Analytics Library for GILTS\""
authors = ["uceslc0 <uceslc0@ucl.ac.uk>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pytest = "^8.3.4"
pydantic = "^2.10.6"


[tool.poetry.group.docs.dependencies]
sphinx = "^8.1.3"
pydata-sphinx-theme = "^0.16.1"
sphinx-design = "^0.6.1"
ipython = "^8.32.0"

[tool.poetry.group.tests.dependencies]
ruff = "^0.9.6"
black = "^25.1.0"
codespell = "^2.4.1"
bandit = "^1.8.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.bandit]
targets = ["fift_analytics"]
exclude_dirs = ["fift_analytics/tests"]
skips = ['B301', 'B105']


[tool.pytest.ini_options]
testpaths = "fift_analytics/tests/"
python_files = "test_*.py"

[tool.ruff]
line-length = 120
exclude = ["test_*.py"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",  # PEP8 naming conventions
    "D",  # pydocstyle
    "PL" # pylint
]
ignore = [
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "D401",  # imperative mood        
    "E20", # Extra space in brackets        
    "E26", # Comment
    "D100", # Missing docstring in public module
    "D102", # missing docstring in method
    "D105", # missing docstring in magic method
    "B904", # B904 Within an `except` clause, raise exceptions
    "D212"  # docstring starts with newline 
]

exclude = [
  "docs/sphinxext/*.py",
  "docs/build/*.py",
  "docs/temp/*.py",
  "fift_analytics/tests/*.py",
  "__init__.py",
]

[tool.poetry-dynamic-versioning]
enable = true
metadata = false
vcs = "git"
latest-tag = true
format = "{base}"

[tool.poetry-dynamic-versioning.substitution]
files = ["fift_analytics/__init__.py"]
patterns = [
    '''(^__version__\s*(?::.*?)?=\s*['"])[^'"]*(['"])''',
    { value = '''(^__version_tuple__\s*(?::.*?)?=\s*\()[^)]*(\))''', mode = "tuple" },
]
